# from scipy.sparse.linalg import spsolve
# from scipy.sparse import coo_matrix
import numpy as np
# Дано: балка длиной 6 м, нагрузка P = 20 кН в середине
L = 6.0
P = 20.0
EI = 1000

# Разбиваем на 2 элемента по 3 м
nodes = [0, 3, 6]
elem = [(0, 1), (1, 2)]

# Матрица жесткости для балки (2D: вертикальное смещение + угол)
K_local = EI / (3**3) * np.array([
    [12, 6*3, -12, 6*3],
    [6*3, 4*3**2, -6*3, 2*3**2],
    [-12, -6*3, 12, -6*3],
    [6*3, 2*3**2, -6*3, 4*3**2]
])

# Сборка глобальной матрицы (здесь упрощенно)
K_global = np.zeros((4, 4))
K_global[:2, :2] += K_local[:2, :2]
K_global[2:, 2:] += K_local[2:, 2:]

# Вектор нагрузки (сила P в середине)
F = np.array([0, 0, -P, 0])

# Решение системы
U = np.linalg.solve(K_global, F)
print(f"Прогиб в середине: {U[2]:.4f} м")